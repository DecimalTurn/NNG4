
A set theorist would object to the idea of `add_zero`
being an actual *function*. But in Lean, a *theorem statement
is a set too*, and the elements of the set are the proofs
of the statement. In particular it's totally fine to have
a function sending a number to a proof.

An *extremely pedantic* set theorist would object to the
use of the word \"function\" because the target space appears
to be the \"set of all proofs\" and it's a *theorem* that
there is no set of all groups, so how do we know there is
definitely a set of all proofs as formalised within ZFC set
theory. And we say no of course we don't want to consider
all proofs at once, the idea is that the input is a natural
number `n` and the output is a proof that `n + 0 = n`.
And the *extremely extremely pedantic* set theorist would
then say that the target set, namely the theorem
statement `n + 0 = n`, depends on the *input* from source set!
A function from `X` to `Y` means that you have to say
in advance what `Y` is, you can't let `Y` change according
to the input! And so you tell this extremely extremely pedantic
set theorist that technically you're right and it's
actually a section of a fibre bundle `add_zero → ℕ`, or
equivalently a function sending a natual number `n` to a proof
of `n + 0 = n`, the fibre of `add_zero → ℕ` at `n`.

This is one of the two axioms for addition.
