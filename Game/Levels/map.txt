## Advanced addition

The 6 lemmas we need are:

a) If x + y = y, then x = 0 and commutative version
b) If x + y = 0, then y = 0 and comm version
c) If x + z = y + z then x = y and comm version

## Algorithm world

Optional. Learn about automating proofs with `simp` and/or `ac_rfl`.
Note : `add_add_add_comm` is needed for isEven_add_isEven
and also in power world with pow_add I think it was,
and also if you choose a lousy variable
to induct on in one of mul_add/add_mul (the
one you don't prove via comm)

But we should make `ac_rfl`.

**TODO** Aesop levels. Tutorial about how to get aesop proving...something.

## Functional program world

After advanced addition world (because here they learn `apply`).
Prove succ_ne_zero and succ_inj, and make decidable equality.
Give proof that 20+20!=41 (note that 2+2!=5 )

## Inequality world:

a) 0 ≤ x;
b) x ≤ x;
c) x ≤ S(x);
d) If x ≤ 0 then x = 0.
a) x ≤ x (reflexivity);
b) If x ≤ y and y ≤ z then x ≤ z (transitivity);
c) If x ≤ y and y ≤ x then x = y (antisymmetry);
d) Either x ≤ y or y ≤ x (totality).

If a ≤ b then a + x ≤ b + x. And iff version?

Advanced inequality world should be `<` and strong induction. Nick from Lean 3 version.
